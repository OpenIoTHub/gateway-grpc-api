// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type StringValue struct {
	Value                string   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringValue) Reset()         { *m = StringValue{} }
func (m *StringValue) String() string { return proto.CompactTextString(m) }
func (*StringValue) ProtoMessage()    {}
func (*StringValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *StringValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringValue.Unmarshal(m, b)
}
func (m *StringValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringValue.Marshal(b, m, deterministic)
}
func (m *StringValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringValue.Merge(m, src)
}
func (m *StringValue) XXX_Size() int {
	return xxx_messageInfo_StringValue.Size(m)
}
func (m *StringValue) XXX_DiscardUnknown() {
	xxx_messageInfo_StringValue.DiscardUnknown(m)
}

var xxx_messageInfo_StringValue proto.InternalMessageInfo

func (m *StringValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Token struct {
	Value                string   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ServerInfo struct {
	ServerHost           string   `protobuf:"bytes,1,opt,name=ServerHost,proto3" json:"ServerHost,omitempty"`
	LoginKey             string   `protobuf:"bytes,2,opt,name=LoginKey,proto3" json:"LoginKey,omitempty"`
	ConnectionType       string   `protobuf:"bytes,3,opt,name=ConnectionType,proto3" json:"ConnectionType,omitempty"`
	LastId               string   `protobuf:"bytes,4,opt,name=LastId,proto3" json:"LastId,omitempty"`
	TcpPort              int64    `protobuf:"varint,5,opt,name=TcpPort,proto3" json:"TcpPort,omitempty"`
	KcpPort              int64    `protobuf:"varint,6,opt,name=KcpPort,proto3" json:"KcpPort,omitempty"`
	UdpApiPort           int64    `protobuf:"varint,7,opt,name=UdpApiPort,proto3" json:"UdpApiPort,omitempty"`
	KcpApiPort           int64    `protobuf:"varint,8,opt,name=KcpApiPort,proto3" json:"KcpApiPort,omitempty"`
	TlsPort              int64    `protobuf:"varint,9,opt,name=TlsPort,proto3" json:"TlsPort,omitempty"`
	GrpcPort             int64    `protobuf:"varint,10,opt,name=GrpcPort,proto3" json:"GrpcPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfo) Reset()         { *m = ServerInfo{} }
func (m *ServerInfo) String() string { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()    {}
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfo.Unmarshal(m, b)
}
func (m *ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfo.Marshal(b, m, deterministic)
}
func (m *ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfo.Merge(m, src)
}
func (m *ServerInfo) XXX_Size() int {
	return xxx_messageInfo_ServerInfo.Size(m)
}
func (m *ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfo proto.InternalMessageInfo

func (m *ServerInfo) GetServerHost() string {
	if m != nil {
		return m.ServerHost
	}
	return ""
}

func (m *ServerInfo) GetLoginKey() string {
	if m != nil {
		return m.LoginKey
	}
	return ""
}

func (m *ServerInfo) GetConnectionType() string {
	if m != nil {
		return m.ConnectionType
	}
	return ""
}

func (m *ServerInfo) GetLastId() string {
	if m != nil {
		return m.LastId
	}
	return ""
}

func (m *ServerInfo) GetTcpPort() int64 {
	if m != nil {
		return m.TcpPort
	}
	return 0
}

func (m *ServerInfo) GetKcpPort() int64 {
	if m != nil {
		return m.KcpPort
	}
	return 0
}

func (m *ServerInfo) GetUdpApiPort() int64 {
	if m != nil {
		return m.UdpApiPort
	}
	return 0
}

func (m *ServerInfo) GetKcpApiPort() int64 {
	if m != nil {
		return m.KcpApiPort
	}
	return 0
}

func (m *ServerInfo) GetTlsPort() int64 {
	if m != nil {
		return m.TlsPort
	}
	return 0
}

func (m *ServerInfo) GetGrpcPort() int64 {
	if m != nil {
		return m.GrpcPort
	}
	return 0
}

type LoginResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	LoginStatus          bool     `protobuf:"varint,3,opt,name=LoginStatus,proto3" json:"LoginStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *LoginResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *LoginResponse) GetLoginStatus() bool {
	if m != nil {
		return m.LoginStatus
	}
	return false
}

func init() {
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*StringValue)(nil), "pb.StringValue")
	proto.RegisterType((*Token)(nil), "pb.Token")
	proto.RegisterType((*ServerInfo)(nil), "pb.ServerInfo")
	proto.RegisterType((*LoginResponse)(nil), "pb.LoginResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xdf, 0xaa, 0xd3, 0x40,
	0x10, 0xc6, 0x4f, 0x7a, 0x4e, 0xfa, 0x67, 0x0e, 0xad, 0xb8, 0x8a, 0x86, 0x82, 0x52, 0x22, 0x48,
	0x05, 0xe9, 0x85, 0x7a, 0x2d, 0x68, 0x91, 0xb4, 0xb4, 0x45, 0x49, 0xa3, 0x5e, 0xca, 0x26, 0x1d,
	0x43, 0xb0, 0xee, 0x2e, 0xbb, 0xdb, 0x4a, 0x5e, 0xcb, 0x67, 0xf2, 0x41, 0x64, 0x27, 0x49, 0x9b,
	0x8a, 0x7a, 0x37, 0xdf, 0xf7, 0x9b, 0xd9, 0x9d, 0x9d, 0x1d, 0x18, 0x1a, 0xd4, 0xc7, 0x22, 0xc3,
	0x99, 0xd2, 0xd2, 0x4a, 0xd6, 0x51, 0x69, 0xd8, 0x03, 0xff, 0xdd, 0x77, 0x65, 0xcb, 0xf0, 0x09,
	0xdc, 0x6e, 0xad, 0x2e, 0x44, 0xfe, 0x89, 0xef, 0x0f, 0xc8, 0xee, 0x83, 0x4f, 0x41, 0xe0, 0x4d,
	0xbc, 0xe9, 0x20, 0xae, 0x44, 0xf8, 0x08, 0xfc, 0x44, 0x7e, 0x43, 0xf1, 0x0f, 0xfc, 0xb3, 0x03,
	0xb0, 0x45, 0x7d, 0x44, 0xbd, 0x14, 0x5f, 0x25, 0x7b, 0xdc, 0xa8, 0x85, 0x34, 0xb6, 0xce, 0x6c,
	0x39, 0x6c, 0x0c, 0xfd, 0xb5, 0xcc, 0x0b, 0xb1, 0xc2, 0x32, 0xe8, 0x10, 0x3d, 0x69, 0xf6, 0x14,
	0x46, 0x73, 0x29, 0x04, 0x66, 0xb6, 0x90, 0x22, 0x29, 0x15, 0x06, 0xd7, 0x94, 0xf1, 0x87, 0xcb,
	0x1e, 0x40, 0x77, 0xcd, 0x8d, 0x5d, 0xee, 0x82, 0x1b, 0xe2, 0xb5, 0x62, 0x01, 0xf4, 0x92, 0x4c,
	0x7d, 0x90, 0xda, 0x06, 0xfe, 0xc4, 0x9b, 0x5e, 0xc7, 0x8d, 0x74, 0x64, 0x55, 0x93, 0x6e, 0x45,
	0x6a, 0xe9, 0xfa, 0xfd, 0xb8, 0x53, 0x6f, 0x54, 0x41, 0xb0, 0x47, 0xb0, 0xe5, 0x38, 0xbe, 0xca,
	0x4e, 0xbc, 0x5f, 0xf1, 0xb3, 0x43, 0x77, 0xee, 0x0d, 0xc1, 0x41, 0x7d, 0x67, 0x25, 0xdd, 0x4b,
	0x23, 0xad, 0x32, 0x42, 0x40, 0xe8, 0xa4, 0xc3, 0x2f, 0x30, 0xa4, 0x57, 0xc7, 0x68, 0x94, 0x14,
	0x06, 0x19, 0x83, 0x9b, 0xb9, 0xdc, 0x35, 0xa3, 0xa5, 0xd8, 0x1d, 0xbd, 0x41, 0x63, 0x78, 0x8e,
	0xf5, 0xa4, 0x1a, 0xc9, 0x26, 0x70, 0x4b, 0xe5, 0x5b, 0xcb, 0xed, 0xc1, 0xd0, 0x94, 0xfa, 0x71,
	0xdb, 0x7a, 0xf1, 0xcb, 0x83, 0x7b, 0x11, 0xb7, 0xf8, 0x83, 0x97, 0x64, 0x6f, 0xb8, 0xe0, 0x39,
	0x6a, 0xf6, 0x1a, 0x1e, 0x56, 0x69, 0xf4, 0x23, 0x6f, 0xcb, 0xd6, 0xcf, 0x8d, 0x66, 0x2a, 0x9d,
	0x9d, 0xf5, 0xf8, 0xae, 0xd3, 0x17, 0x5d, 0x86, 0x57, 0xec, 0x15, 0xb0, 0x8b, 0xfa, 0x6a, 0x33,
	0x06, 0x2e, 0x95, 0xc2, 0xbf, 0x57, 0x3d, 0x07, 0x16, 0xa1, 0x7d, 0xaf, 0x50, 0x2c, 0x65, 0xb2,
	0x38, 0xa4, 0xad, 0x2a, 0x5a, 0xc4, 0xf1, 0xf9, 0x80, 0xf0, 0x8a, 0x3d, 0x83, 0x3b, 0x11, 0x5a,
	0xd7, 0xfd, 0x67, 0x5e, 0xfe, 0x37, 0x35, 0xed, 0xd2, 0x52, 0xbf, 0xfc, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x4e, 0xb2, 0x38, 0x4c, 0xe5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GatewayLoginManagerClient is the client API for GatewayLoginManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayLoginManagerClient interface {
	LoginServerByServerInfo(ctx context.Context, in *ServerInfo, opts ...grpc.CallOption) (*LoginResponse, error)
	LoginServerByToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*LoginResponse, error)
	GetOpenIoTHubToken(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Token, error)
	GetGateWayToken(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Token, error)
}

type gatewayLoginManagerClient struct {
	cc *grpc.ClientConn
}

func NewGatewayLoginManagerClient(cc *grpc.ClientConn) GatewayLoginManagerClient {
	return &gatewayLoginManagerClient{cc}
}

func (c *gatewayLoginManagerClient) LoginServerByServerInfo(ctx context.Context, in *ServerInfo, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/pb.GatewayLoginManager/LoginServerByServerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayLoginManagerClient) LoginServerByToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/pb.GatewayLoginManager/LoginServerByToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayLoginManagerClient) GetOpenIoTHubToken(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/pb.GatewayLoginManager/GetOpenIoTHubToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayLoginManagerClient) GetGateWayToken(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/pb.GatewayLoginManager/GetGateWayToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewayLoginManagerServer is the server API for GatewayLoginManager service.
type GatewayLoginManagerServer interface {
	LoginServerByServerInfo(context.Context, *ServerInfo) (*LoginResponse, error)
	LoginServerByToken(context.Context, *Token) (*LoginResponse, error)
	GetOpenIoTHubToken(context.Context, *Empty) (*Token, error)
	GetGateWayToken(context.Context, *Empty) (*Token, error)
}

// UnimplementedGatewayLoginManagerServer can be embedded to have forward compatible implementations.
type UnimplementedGatewayLoginManagerServer struct {
}

func (*UnimplementedGatewayLoginManagerServer) LoginServerByServerInfo(ctx context.Context, req *ServerInfo) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginServerByServerInfo not implemented")
}
func (*UnimplementedGatewayLoginManagerServer) LoginServerByToken(ctx context.Context, req *Token) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginServerByToken not implemented")
}
func (*UnimplementedGatewayLoginManagerServer) GetOpenIoTHubToken(ctx context.Context, req *Empty) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOpenIoTHubToken not implemented")
}
func (*UnimplementedGatewayLoginManagerServer) GetGateWayToken(ctx context.Context, req *Empty) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGateWayToken not implemented")
}

func RegisterGatewayLoginManagerServer(s *grpc.Server, srv GatewayLoginManagerServer) {
	s.RegisterService(&_GatewayLoginManager_serviceDesc, srv)
}

func _GatewayLoginManager_LoginServerByServerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayLoginManagerServer).LoginServerByServerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewayLoginManager/LoginServerByServerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayLoginManagerServer).LoginServerByServerInfo(ctx, req.(*ServerInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayLoginManager_LoginServerByToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayLoginManagerServer).LoginServerByToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewayLoginManager/LoginServerByToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayLoginManagerServer).LoginServerByToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayLoginManager_GetOpenIoTHubToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayLoginManagerServer).GetOpenIoTHubToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewayLoginManager/GetOpenIoTHubToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayLoginManagerServer).GetOpenIoTHubToken(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayLoginManager_GetGateWayToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayLoginManagerServer).GetGateWayToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewayLoginManager/GetGateWayToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayLoginManagerServer).GetGateWayToken(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _GatewayLoginManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.GatewayLoginManager",
	HandlerType: (*GatewayLoginManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginServerByServerInfo",
			Handler:    _GatewayLoginManager_LoginServerByServerInfo_Handler,
		},
		{
			MethodName: "LoginServerByToken",
			Handler:    _GatewayLoginManager_LoginServerByToken_Handler,
		},
		{
			MethodName: "GetOpenIoTHubToken",
			Handler:    _GatewayLoginManager_GetOpenIoTHubToken_Handler,
		},
		{
			MethodName: "GetGateWayToken",
			Handler:    _GatewayLoginManager_GetGateWayToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
